
@using ForumDisscussion.Models
@model ForumDisscussion.Models.UserSignUpModel

@{
    ViewBag.Title = "SignUp";
}




@section Scripts
{
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.imgareaselect.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.fancyupload.js")"></script>
<script>
    $(document).ready(function () {
        initSelect();
    });
</script>
}



    <img src="~/Png/th.jpg" width="120"/>
  


@using(Html.BeginForm("SignUp","UserSignUp",FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    
    
    
    
     @Html.ValidationSummary(true)

    <fieldset>
        <legend>ForumUser</legend>

  

        <div class="editor-label">
            @Html.LabelFor(model => model.FirstName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastName,new{id="in"})
            @Html.ValidationMessageFor(model => model.LastName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserName,new{id="in"})
            @Html.ValidationMessageFor(model => model.UserName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Country)
        </div>
        <div class="editor-field">
            
       
            
                          @Html.DropDownList("Country",new List<SelectListItem>
            {
                new SelectListItem{Text = "Bangladesh",Value = "Bangladesh"},
                new SelectListItem{Text = "India",Value = "India"},
                new SelectListItem{Text = "Pakistan",Value = "Pakistan"},
                 new SelectListItem{Text = "Srilanka",Value = "Srilanka"},
                new SelectListItem{Text = "China",Value = "China"},
                 new SelectListItem{Text = "Nepal",Value = "Nepal"},
                new SelectListItem{Text = "England",Value = "England"},
                 new SelectListItem{Text = "America",Value = "America"},
                new SelectListItem{Text = "South Africa",Value = "South Africa"}
            },"Select Your Country")
            @Html.ValidationMessageFor(model => model.Country)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email,new{id="in"})
            @Html.ValidationMessageFor(model => model.Email)
        </div>
        
        
              <div class="editor-label">
            @Html.LabelFor(model => model.Image)
        </div>
        <div class="editor-field">
  
              @Html.FileFor(model => model.File)
             <img alt="Field for image cutting" width="100"  id="preview" src="@Url.Content("~/Content/empty.png")" />
   
            @Html.ValidationMessageFor(model => model.Image)
        </div>
        
        

        <div class="editor-label">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Password,new{id="in"})
            @Html.ValidationMessageFor(model => model.Password)
        </div>
        
               <div class="editor-label">
            @Html.LabelFor(model => model.COnfirmPassword)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.COnfirmPassword,new{id="in"})
            @Html.ValidationMessageFor(model => model.COnfirmPassword)
        </div>
    
        <br/>
        <div>
            <input type="submit" value="Sign Up" class="btn btn-success" />
        </div>
    </fieldset>
}
